import streamlit as st
import pandas as pd
import plotly.express as px
import requests
from datetime import datetime

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    layout="wide",
    page_title="üå¶ –ü–æ–≥–æ–¥–Ω—ã–π –¥–∞—à–±–æ—Ä–¥",
    page_icon="üåç"
)

# –ó–∞–≥–æ–ª–æ–≤–æ–∫
st.title("üåç –ê–Ω–∞–ª–∏–∑ –ø–æ–≥–æ–¥—ã –ø–æ –≥–æ—Ä–æ–¥–∞–º")
st.markdown("---")

# 1. –°–ª–æ–≤–∞—Ä—å –≥–æ—Ä–æ–¥–æ–≤ —Å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏
CITIES = {
    "–ú–æ—Å–∫–≤–∞": {"lat": 55.7558, "lon": 37.6176},
    "–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫": {"lat": 55.0084, "lon": 82.9357},
    "–°–æ—á–∏": {"lat": 43.5855, "lon": 39.7231},
    "–ê—Å—Ç—Ä–∞—Ö–∞–Ω—å": {"lat": 46.3477, "lon": 48.0305}
}

# 2. –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ —Å–∞–π–¥–±–∞—Ä–µ
with st.sidebar:
    st.header("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏")
    selected_cities = st.multiselect(
        "–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥–∞",
        list(CITIES.keys()),
        default=["–ú–æ—Å–∫–≤–∞", "–°–æ—á–∏"]
    )
    
    year = st.slider("–ì–æ–¥ –∞–Ω–∞–ª–∏–∑–∞", 2021, 2022, 2023, 2024)
    date_start = datetime(year, 1, 1)
    date_end = datetime(year, 12, 31)
    
    st.markdown("---")
    st.info("–î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è —Å Open-Meteo API")

# 3. –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º
@st.cache_data
def load_weather_data(cities, date_start, date_end):
    all_data = []
    
    for city_name, coords in cities.items():
        url = "https://archive-api.open-meteo.com/v1/archive"
        params = {
            "latitude": coords["lat"],
            "longitude": coords["lon"],
            "start_date": date_start.strftime("%Y-%m-%d"),
            "end_date": date_end.strftime("%Y-%m-%d"),
            "daily": "temperature_2m_max,temperature_2m_min,precipitation_sum",
            "timezone": "auto"
        }
        
        response = requests.get(url, params=params)
        if response.status_code == 200:
            data = response.json()
            df = pd.DataFrame(data["daily"])
            df["date"] = pd.to_datetime(df["time"])
            df["city"] = city_name
            all_data.append(df)
    
    return pd.concat(all_data) if all_data else None

weather_df = load_weather_data(
    {city: CITIES[city] for city in selected_cities},
    date_start,
    date_end
)

if weather_df is None:
    st.error("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
    st.stop()

# 4. –û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏
st.subheader("üìä –ö–ª—é—á–µ–≤—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏")
cols = st.columns(3)
with cols[0]:
    st.metric("–ì–æ—Ä–æ–¥–æ–≤ –≤ –∞–Ω–∞–ª–∏–∑–µ", len(selected_cities))
with cols[1]:
    st.metric("–°—Ä–µ–¥–Ω—è—è –º–∞–∫—Å. —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞", 
             f"{weather_df['temperature_2m_max'].mean():.1f}¬∞C")
with cols[2]:
    st.metric("–°—Ä–µ–¥–Ω—è—è —Å—É–º–º–∞ –æ—Å–∞–¥–∫–æ–≤", 
             f"{weather_df['precipitation_sum'].mean():.1f} –º–º")

st.markdown("---")

# 5. –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
tab1, tab2, tab3 = st.tabs(["–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞", "–û—Å–∞–¥–∫–∏", "–î–µ—Ç–∞–ª–∏ –ø–æ –≥–æ—Ä–æ–¥—É"])

with tab1:
    st.subheader("üå°Ô∏è –î–∏–Ω–∞–º–∏–∫–∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä")
    fig_temp = px.line(
        weather_df,
        x="date",
        y=["temperature_2m_max", "temperature_2m_min"],
        color="city",
        title=f"–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –ø–æ –≥–æ—Ä–æ–¥–∞–º ({year})",
        labels={"value": "–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ (¬∞C)"}
    )
    st.plotly_chart(fig_temp, use_container_width=True)

with tab2:
    st.subheader("üåßÔ∏è –û—Å–∞–¥–∫–∏")
    fig_precip = px.bar(
        weather_df,
        x="date",
        y="precipitation_sum",
        color="city",
        title=f"–°—É–º–º–∞ –æ—Å–∞–¥–∫–æ–≤ –ø–æ –≥–æ—Ä–æ–¥–∞–º ({year})",
        labels={"precipitation_sum": "–û—Å–∞–¥–∫–∏ (–º–º)"}
    )
    st.plotly_chart(fig_precip, use_container_width=True)

with tab3:
    st.subheader("üîç –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –ø–æ –≥–æ—Ä–æ–¥—É")
    city = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥", selected_cities)
    
    city_data = weather_df[weather_df["city"] == city]
    
    # –ì—Ä–∞—Ñ–∏–∫ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä
    fig_city_temp = px.bar(
        city_data,
        x="date",
        y=["temperature_2m_max", "temperature_2m_min"],
        title=f"–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤ {city} ({year})",
        barmode="group",
        labels={"value": "–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ (¬∞C)"}
    )
    st.plotly_chart(fig_city_temp, use_container_width=True)
    
    # –ê–Ω–∞–ª–∏–∑ –ø–æ –º–µ—Å—è—Ü–∞–º
    city_data["month"] = city_data["date"].dt.month_name()
    monthly_stats = city_data.groupby("month").agg({
        "temperature_2m_max": "mean",
        "temperature_2m_min": "mean",
        "precipitation_sum": "sum"
    }).reset_index()
    
    cols = st.columns(2)
    with cols[0]:
        st.markdown("**–°—Ä–µ–¥–Ω—è—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –ø–æ –º–µ—Å—è—Ü–∞–º**")
        fig_month = px.line(
            monthly_stats,
            x="month",
            y=["temperature_2m_max", "temperature_2m_min"],
            labels={"value": "–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ (¬∞C)"}
        )
        st.plotly_chart(fig_month, use_container_width=True)
    
    with cols[1]:
        st.markdown("**–û—Å–∞–¥–∫–∏ –ø–æ –º–µ—Å—è—Ü–∞–º**")
        fig_month_precip = px.bar(
            monthly_stats,
            x="month",
            y="precipitation_sum",
            labels={"precipitation_sum": "–û—Å–∞–¥–∫–∏ (–º–º)"}
        )
        st.plotly_chart(fig_month_precip, use_container_width=True)



# –ü–æ–¥–≤–∞–ª
st.markdown("---")
st.caption("–î–∞–Ω–Ω—ã–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω—ã Open-Meteo API")
